# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Rate my Intern CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Run gradle wrapper
        run: gradle wrapper
      - name: Run Test
        run: gradle clean test
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database-name:
          - test
        database-password:
          - postgres
        database-user:
          - postgres
        database-host:
          - localhost
        database-port:
          - 5433
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ matrix.database-name }}
          POSTGRES_USER: ${{ matrix.database-user }}
          POSTGRES_PASSWORD: ${{ matrix.database-password }}
        ports:
          - 5433:5433
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: run tests
        env:
          DATABASE_NAME_TEST: ${{ matrix.database-name }}
          DATABASE_USER: ${{ matrix.database-user }}
          DATABASE_PASSWORD: ${{ matrix.database-password }}
          DATABASE_HOST: ${{ matrix.database-host }}
          DATABASE_PORT: ${{ matrix.database-port }}
          POSTGRES_DB: ${{ matrix.database-name }}
        run:  |
          gradle clean test
